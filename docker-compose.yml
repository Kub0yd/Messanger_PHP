# версия синтаксиса
version: '3'
 
# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  messenger:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: mymessenger/php  # имя будущего образа
    container_name: messenger  # имя контейнера после запуска
    volumes:
       - ./code:/data/mysite.local
       - ./php-ini/php.ini:/usr/local/etc/php/php.ini
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - messenger-network
 
  #контейнер с Nginx
  messenger_webserver:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: mymessenger/nginx
    container_name: messenger_webserver
    volumes:
       - ./code:/data/mysite.local

    # проброс портов
    ports:
      - "80:80"
      - "443:443"
    networks:
      - messenger-network
 
  # контейнер с MySQL
  # строим на базе стандартного образа
  db_messenger:
    image: mysql:5.7.22
    container_name: db_messenger
    ports:
     - "3306:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./dbdata:/var/lib/mysql
      - ./mysql/etc/my.cnf:/etc/mysql/conf.d/mysql.cnf
    networks:
      - messenger-network

  # Добавляем ещё одну папку, которую подхватит php и подключит новые файлы, не затрагивая остальные настройки

#Docker Networks
networks:
  messenger-network:
    driver: bridge